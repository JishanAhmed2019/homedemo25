---
title: "VS Code for Data and AI Projects"
author:
  - name: Jishan Ahmed
    email: jishanahmed1@weber.edu
    affiliations:
      - name: Weber State University
        address: Department of Mathematics
        city: Ogden
        state: UT
        postal-code: 84404
toc: true
format:
  html:
    self-contained: true
    code-tools: true
    html-math-method: katex
  pdf: default
execute:
  warning: false
---

# VS Code for Data and AI Projects

## What You'll Learn

-   How to set up VS Code workspace
-   How to style and customize VS Code
-   How to optimize your workspace
-   How to create and work with virtual environments
-   How to 2x your productivity with the interactive mode
-   How to easily integrate Git into your workflow

## Download VS Code
::: {.callout-note title="Download VS Code"}
[**Visual Studio Code ‚Äî Code Editing. Redefined**](https://code.visualstudio.com)  
A code editor redefined and optimized for building and debugging modern web and cloud applications.  
Visual Studio Code is free and available on Linux, macOS, and Windows.
:::


## Introduction

-  **Visual Studio Code**: Free integrated development environment
    (IDE) made by Microsoft for Windows, Linux and macOS.
-  **Features**: Supports many languages, debugging, syntax
    highlighting, intelligent code completion, snippets, code
    refactoring, and embedded Git.
-   **Extensible and customizable:** Many settings and huge marketplace
    with extensions to add new languages, themes, debuggers, and to
    connect to additional services.
-   **Productivity:** Working in VS Code will make you more efficient.

## Python Installation

-   Ensure you have Python installed on your machine. You can get it
    through the [official Python
    installer](https://www.python.org/downloads/) or by using
    [Conda](https://docs.conda.io/en/latest/miniconda.html), a package
    manager that simplifies installation and management of Python
    environments.
-   The main difference:
    -   **Official Python Installer**: Installs Python directly and is
        best for those who want the pure Python experience or are just
        starting out.
    -   **Conda**: Useful for managing multiple Python environments and
        dependencies, especially in data science applications. It
        includes both Python and other tools to get you started quickly.

### Python Installation (macOS)

On macOS, the easiest way to install Python is with **Homebrew**:

```bash
# Check if Homebrew is installed
brew --version
# Example output:
# Homebrew 4.3.13
# Homebrew/homebrew-core (git revision cd04b70863; last commit 2024-08-06)

# Install Python 3
brew install python3

# Verify Python installation
python3 --version
# Example output:
# Python 3.10.11
```

### Python Installation (Windows)

On Windows, you have to install Python from the **official Python installer**.

#### Option 1: Official Installer
1. Download from the [official Python website](https://www.python.org/downloads/).
2. Run the installer and make sure to check **‚ÄúAdd Python to PATH‚Äù**.
3. Verify installation:

```powershell
python --version
# Example output:
# Python 3.10.11
```


## Command Palette

-   The Command Palette in VS Code is a powerful feature that allows you
    to quickly access commands and features by typing their names. It's
    like a shortcut hub for all the actions within the editor.
-   To open it, press `Ctrl+Shift+P` (or `Cmd+Shift+P` on Mac), and
    start typing your command. It's awesome because it speeds up your
    workflow by letting you jump to any function without navigating
    through menus or remembering keyboard shortcuts.

## Workspace Setup

-   **Folder Location**: I suggest setting up a `Repositories` folder on
    your drive to keep all your code projects organized; you can even
    divide them into Personal Repositories and Work Repositories for
    better clarity.
-   **Opening a Folder**: To open a folder in VS Code using the
    Explorer, simply navigate to "File" on the menu bar and select "Open
    Folder," then choose the directory you wish to access.
-   **Terminal Shortcut**: Alternatively, you can open a folder directly
    from the terminal by typing `code .` after installing the command
    line tools via the Command Palette in VS Code, searching for 'Shell
    Command: Install 'code' command in PATH', and executing it.
-   **Project Template**: For project initialization, I recommend
    utilizing a GitHub project template. Here's an
    [example](https://github.com/datalumina/datalumina-project-template).
-   **Saving the Workspace**: To save your workspace file along with the
    folder in Visual Studio Code, first ensure all files are saved, then
    go to the File menu, select Save Workspace As, choose your desired
    location, give your workspace a name, and click Save.
    

## Git Installation

Before cloning repositories, make sure Git is installed on your system.

### Windows
1. Download the official installer from [git-scm.com](https://git-scm.com/download/win).  
2. Run the installer and accept the defaults (make sure **‚ÄúGit from the command line and also from 3rd-party software‚Äù** is selected).  
3. Verify installation:
   ```powershell
   git --version
   # Example output:
   # git version 2.46.0.windows.1
   ```

### macOS
- Install Git via **Homebrew**:
  ```bash
  brew install git
  ```
- Verify:
  ```bash
  git --version
  ```


### Cloning the Project Repository

Once Python is installed, you can clone this tutorial‚Äôs demo repository and open it in VS Code.

```bash
# Clone the repository from GitHub
git clone https://github.com/JishanAhmed2019/homedemo25.git

# Navigate into the project folder
cd homedemo25

# List files in the folder
ls

# Open the folder in VS Code
code .
```

### Virtual Environments 

-   **Open Command Palette**: Use the shortcut to open the Command
    Palette in VS Code.
-   **Select Environment Command**: Type and select
    `Python: Select Interpreter` to choose an existing interpreter or
    create a new virtual environment.
-   **Create New Environment**:
    -   **Venv**: Click on Venv ‚Üí select Python version ‚Üí
        requirements.txt (optional) 
    -   **Conda**: If you have Anaconda installed, it will show up in
        the list as well. You can select Conda ‚Üí Python version
-   **Check Environment**: After the creation, double check to make sure
    the right environment is selected. You can adjust using
    `Python: Select Interpreter`
- **Best Practice:** Use one environment per project and include a
    `requirements.txt` or `environment.yml` file to ensure
    reproducibility.

### Installing Extensions

To install an extension in Visual Studio Code (VSCode), follow these
steps: 1. **Open VSCode** on your computer. 2. Look for the **Extensions
View** icon on the Sidebar, which looks like a square within a square,
or press `Ctrl+Shift+X` to open it directly. 3. In the **Extensions
View**, you'll find a search bar at the top. Type the name of the
extension you're looking for. 4. Browse through the list of extensions
that appear based on your search. When you find the one you want, click
on it to view more details. 5. Click the **Install** button to add the
extension to VSCode.

After installation, some extensions may require additional setup or a
restart of VSCode to work properly. You can manage your installed
extensions from the Extensions View by right-clicking on them for
options such as disable, uninstall, or update. 

### Recommended Extensions 

1. [Python Extension
Pack](https://marketplace.visualstudio.com/items?itemName=ms-python.python)

2. [GitHub
Copilot](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot)


### Styling VS Code

-   **Change Themes**: Settings ‚Üí Themes
    -   Color Theme ‚Üí Atom One Dark
    -   File Icon Theme ‚Üí Material Icon Theme



### Running Jupyter Notebook

-   You can run Jupyter Notebooks straight from VS Code and use all the
    same shortcuts you are used to. Just make sure to select the right
    kernel.

### Interactive Jupyter

-   **Interactive Python**: Search for `Jupyter Interactive Window` ‚Üí
    Enable (When pressing shift + enter, send selection to Jupyter
    interactive window as opposed to the Python terminal)


### GitHub Integration

-   **Access Git Commands:** Use the Source Control menu in VS Code to
    run common Git commands like commit, push, pull, and merge without
    leaving the editor. This streamlines your workflow by integrating
    version control into your development environment.
-   **Branch Awareness:** Easily check which branch you're working on
    directly from the Source Control menu. It provides a clear display
    of your current branch, making it simple to switch branches or
    create new ones as needed.
-   **Open Repo in Browser:** With a quick action from the Source
    Control menu, you can open your repository in a web browser. This is
    handy for reviewing pull requests, managing repo settings, or
    browsing the code on GitHub.
    
### Keyboard Shortcuts in VS Code

::: {.callout-tip title="üöÄ Essential Shortcuts"}
| Action                         | Windows / Linux               | macOS                                  |
|--------------------------------|-------------------------------|----------------------------------------|
| Open Integrated Terminal       | <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>`</kbd>
| Open Command Palette           | <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>P</kbd> | <kbd>Cmd</kbd> + <kbd>Shift</kbd> + <kbd>P</kbd> |
| Run Code in Interactive Window | <kbd>Shift</kbd> + <kbd>Enter</kbd> | <kbd>Shift</kbd> + <kbd>Enter</kbd> |
| Run Current File               | <kbd>Ctrl</kbd> + <kbd>F5</kbd> | <kbd>Cmd</kbd> + <kbd>F5</kbd> |
| Toggle Sidebar                 | <kbd>Ctrl</kbd> + <kbd>B</kbd> | <kbd>Cmd</kbd> + <kbd>B</kbd> |
| Split Editor                   | <kbd>Ctrl</kbd> + <kbd>\\</kbd> | <kbd>Cmd</kbd> + <kbd>\\</kbd> |
| Comment / Uncomment Line       | <kbd>Ctrl</kbd> + <kbd>/</kbd> | <kbd>Cmd</kbd> + <kbd>/</kbd> |
:::

### Best Practices for AI Projects

-   Use one **virtual environment per project**.
-   Write a `README.md` for each project.

### Challenge: Your First AI Project Setup

1. Create a new repo from the project template.  
2. Set up a virtual environment.  
3. Install dependencies.  
4. Run a Jupyter notebook inside VS Code.  
5. Commit and push your first change.  

### References

- Ebbelaar, D. (2024, August 1). *VS Code for Data and AI Projects: A Comprehensive Guide to Setting Up and Optimizing Your Workspace*. Retrieved from [VS Code for Data and AI Projects.](https://datalumina.clickup.com/docs/9015213037/d/h/8cnjezd-17675/ddd52c673443975)
